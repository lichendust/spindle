/*
	Spindle
	A static site generator
	Copyright (C) 2022-2023 Harley Denham

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// Code generated by "stringer -type=AST_Type,AST_Modifier,File_Type -output=parser_string.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NULL-0]
	_ = x[BLANK-1]
	_ = x[RAW-2]
	_ = x[NORMAL-3]
	_ = x[TOKEN-4]
	_ = x[IMPORT-5]
	_ = x[PARTIAL-6]
	_ = x[TEMPLATE-7]
	_ = x[SCOPE_UNSET-8]
	_ = x[SCRIPT-9]
	_ = x[DECL-10]
	_ = x[DECL_BLOCK-11]
	_ = x[DECL_TOKEN-12]
	_ = x[DECL_REJECT-13]
	_ = x[VAR-14]
	_ = x[VAR_ENUM-15]
	_ = x[VAR_ANON-16]
	_ = x[CONTROL_FOR-17]
	_ = x[CONTROL_IF-18]
	_ = x[OP_AND-19]
	_ = x[OP_OR-20]
	_ = x[OP_NOT-21]
	_ = x[RES_FINDER-22]
	_ = x[BLOCK-23]
	_ = x[is_formatter-24]
	_ = x[ITALIC_OPEN-25]
	_ = x[ITALIC_CLOSE-26]
	_ = x[BOLD_OPEN-27]
	_ = x[BOLD_CLOSE-28]
	_ = x[BOLD_ITALIC_OPEN-29]
	_ = x[BOLD_ITALIC_CLOSE-30]
	_ = x[MARK_OPEN-31]
	_ = x[MARK_CLOSE-32]
	_ = x[STRIKE_OPEN-33]
	_ = x[STRIKE_CLOSE-34]
	_ = x[WHITESPACE-35]
	_ = x[is_lexer-36]
	_ = x[NEWLINE-37]
	_ = x[WORD-38]
	_ = x[IDENT-39]
	_ = x[BRACE_OPEN-40]
	_ = x[BRACE_CLOSE-41]
	_ = x[BRACKET_OPEN-42]
	_ = x[BRACKET_CLOSE-43]
	_ = x[ANGLE_OPEN-44]
	_ = x[ANGLE_CLOSE-45]
	_ = x[ESCAPE-46]
	_ = x[NUMBER-47]
	_ = x[FORWARD_SLASH-48]
	_ = x[MULTIPLY-49]
	_ = x[AMPERSAND-50]
	_ = x[COLON-51]
	_ = x[TILDE-52]
	_ = x[EOF-53]
	_ = x[DOLLAR-54]
	_ = x[is_non_word-55]
	_ = x[NON_WORD-56]
	_ = x[ASTERISK-57]
	_ = x[EQUALS-58]
	_ = x[BANG-59]
	_ = x[STOP-60]
	_ = x[PLUS-61]
	_ = x[PERCENT-62]
	_ = x[PIPE-63]
}

const _ast_type_name = "NULLBLANKRAWNORMALTOKENIMPORTPARTIALTEMPLATESCOPE_UNSETSCRIPTDECLDECL_BLOCKDECL_TOKENDECL_REJECTVARVAR_ENUMVAR_ANONCONTROL_FORCONTROL_IFOP_ANDOP_OROP_NOTRES_FINDERBLOCKis_formatterITALIC_OPENITALIC_CLOSEBOLD_OPENBOLD_CLOSEBOLD_ITALIC_OPENBOLD_ITALIC_CLOSEMARK_OPENMARK_CLOSESTRIKE_OPENSTRIKE_CLOSEWHITESPACEis_lexerNEWLINEWORDIDENTBRACE_OPENBRACE_CLOSEBRACKET_OPENBRACKET_CLOSEANGLE_OPENANGLE_CLOSEESCAPENUMBERFORWARD_SLASHMULTIPLYAMPERSANDCOLONTILDEEOFDOLLARis_non_wordNON_WORDASTERISKEQUALSBANGSTOPPLUSPERCENTPIPE"

var _ast_type_index = [...]uint16{0, 4, 9, 12, 18, 23, 29, 36, 44, 55, 61, 65, 75, 85, 96, 99, 107, 115, 126, 136, 142, 147, 153, 163, 168, 180, 191, 203, 212, 222, 238, 255, 264, 274, 285, 297, 307, 315, 322, 326, 331, 341, 352, 364, 377, 387, 398, 404, 410, 423, 431, 440, 445, 450, 453, 459, 470, 478, 486, 492, 496, 500, 504, 511, 515}

func (i AST_Type) String() string {
	if i >= AST_Type(len(_ast_type_index)-1) {
		return "AST_Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ast_type_name[_ast_type_index[i]:_ast_type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NONE-0]
	_ = x[SLUG-1]
	_ = x[UNIQUE_SLUG-2]
	_ = x[UPPER-3]
	_ = x[LOWER-4]
	_ = x[TITLE-5]
	_ = x[EXPAND-6]
	_ = x[EXPAND_ALL-7]
}

const _ast_modifier_name = "NONESLUGUNIQUE_SLUGUPPERLOWERTITLEEXPANDEXPAND_ALL"

var _ast_modifier_index = [...]uint8{0, 4, 8, 19, 24, 29, 34, 40, 50}

func (i AST_Modifier) String() string {
	if i >= AST_Modifier(len(_ast_modifier_index)-1) {
		return "AST_Modifier(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ast_modifier_name[_ast_modifier_index[i]:_ast_modifier_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DIRECTORY-0]
	_ = x[ROOT-1]
	_ = x[is_image-2]
	_ = x[IMG_JPG-3]
	_ = x[IMG_PNG-4]
	_ = x[IMG_TIF-5]
	_ = x[IMG_WEB-6]
	_ = x[IMG_GIF-7]
	_ = x[end_image-8]
	_ = x[is_page-9]
	_ = x[MARKUP-10]
	_ = x[MARKDOWN-11]
	_ = x[is_static-12]
	_ = x[HTML-13]
	_ = x[end_page-14]
	_ = x[STATIC-15]
	_ = x[JAVASCRIPT-16]
	_ = x[SCSS-17]
	_ = x[CSS-18]
	_ = x[end_static-19]
}

const _file_type_name = "DIRECTORYROOTis_imageIMG_JPGIMG_PNGIMG_TIFIMG_WEBIMG_GIFend_imageis_pageMARKUPMARKDOWNis_staticHTMLend_pageSTATICJAVASCRIPTSCSSCSSend_static"

var _file_type_index = [...]uint8{0, 9, 13, 21, 28, 35, 42, 49, 56, 65, 72, 78, 86, 95, 99, 107, 113, 123, 127, 130, 140}

func (i File_Type) String() string {
	if i >= File_Type(len(_file_type_index)-1) {
		return "File_Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _file_type_name[_file_type_index[i]:_file_type_index[i+1]]
}
