// Code generated by "stringer -type=ast_type,ast_modifier,file_type -output=parser_string.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NULL-0]
	_ = x[BLANK-1]
	_ = x[NORMAL-2]
	_ = x[TOKEN-3]
	_ = x[IMPORT-4]
	_ = x[PARTIAL-5]
	_ = x[TEMPLATE-6]
	_ = x[DECL-7]
	_ = x[DECL_BLOCK-8]
	_ = x[DECL_TOKEN-9]
	_ = x[VAR-10]
	_ = x[VAR_ENUM-11]
	_ = x[VAR_ANON-12]
	_ = x[RES_FINDER-13]
	_ = x[BLOCK-14]
	_ = x[is_formatter-15]
	_ = x[ITALIC_OPEN-16]
	_ = x[ITALIC_CLOSE-17]
	_ = x[BOLD_OPEN-18]
	_ = x[BOLD_CLOSE-19]
	_ = x[BOLD_ITALIC_OPEN-20]
	_ = x[BOLD_ITALIC_CLOSE-21]
	_ = x[MARK_OPEN-22]
	_ = x[MARK_CLOSE-23]
	_ = x[STRIKE_OPEN-24]
	_ = x[STRIKE_CLOSE-25]
	_ = x[is_lexer-26]
	_ = x[WHITESPACE-27]
	_ = x[NEWLINE-28]
	_ = x[WORD-29]
	_ = x[IDENT-30]
	_ = x[EQUALS-31]
	_ = x[BRACE_OPEN-32]
	_ = x[BRACE_CLOSE-33]
	_ = x[BRACKET_OPEN-34]
	_ = x[BRACKET_CLOSE-35]
	_ = x[ANGLE_OPEN-36]
	_ = x[ANGLE_CLOSE-37]
	_ = x[is_non_word-38]
	_ = x[NON_WORD-39]
	_ = x[ESCAPE-40]
	_ = x[FORWARD_SLASH-41]
	_ = x[NUMBER-42]
	_ = x[STOP-43]
	_ = x[COLON-44]
	_ = x[ASTERISK-45]
	_ = x[AMPERSAND-46]
	_ = x[TILDE-47]
	_ = x[PLUS-48]
	_ = x[PERCENT-49]
	_ = x[EOF-50]
}

const _ast_type_name = "NULLBLANKNORMALTOKENIMPORTPARTIALTEMPLATEDECLDECL_BLOCKDECL_TOKENVARVAR_ENUMVAR_ANONRES_FINDERBLOCKis_formatterITALIC_OPENITALIC_CLOSEBOLD_OPENBOLD_CLOSEBOLD_ITALIC_OPENBOLD_ITALIC_CLOSEMARK_OPENMARK_CLOSESTRIKE_OPENSTRIKE_CLOSEis_lexerWHITESPACENEWLINEWORDIDENTEQUALSBRACE_OPENBRACE_CLOSEBRACKET_OPENBRACKET_CLOSEANGLE_OPENANGLE_CLOSEis_non_wordNON_WORDESCAPEFORWARD_SLASHNUMBERSTOPCOLONASTERISKAMPERSANDTILDEPLUSPERCENTEOF"

var _ast_type_index = [...]uint16{0, 4, 9, 15, 20, 26, 33, 41, 45, 55, 65, 68, 76, 84, 94, 99, 111, 122, 134, 143, 153, 169, 186, 195, 205, 216, 228, 236, 246, 253, 257, 262, 268, 278, 289, 301, 314, 324, 335, 346, 354, 360, 373, 379, 383, 388, 396, 405, 410, 414, 421, 424}

func (i ast_type) String() string {
	if i >= ast_type(len(_ast_type_index)-1) {
		return "ast_type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ast_type_name[_ast_type_index[i]:_ast_type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NONE-0]
	_ = x[SLUG-1]
	_ = x[UPPER-2]
	_ = x[LOWER-3]
	_ = x[TITLE-4]
	_ = x[EXPAND-5]
	_ = x[EXPAND_ALL-6]
}

const _ast_modifier_name = "NONESLUGUPPERLOWERTITLEEXPANDEXPAND_ALL"

var _ast_modifier_index = [...]uint8{0, 4, 8, 13, 18, 23, 29, 39}

func (i ast_modifier) String() string {
	if i >= ast_modifier(len(_ast_modifier_index)-1) {
		return "ast_modifier(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ast_modifier_name[_ast_modifier_index[i]:_ast_modifier_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DIRECTORY-0]
	_ = x[ROOT-1]
	_ = x[is_image-2]
	_ = x[IMG_JPG-3]
	_ = x[IMG_PNG-4]
	_ = x[IMG_TIF-5]
	_ = x[IMG_WEB-6]
	_ = x[end_image-7]
	_ = x[is_page-8]
	_ = x[MARKUP-9]
	_ = x[MARKDOWN-10]
	_ = x[is_static-11]
	_ = x[HTML-12]
	_ = x[end_page-13]
	_ = x[STATIC-14]
	_ = x[JAVASCRIPT-15]
	_ = x[SCSS-16]
	_ = x[CSS-17]
	_ = x[end_static-18]
}

const _file_type_name = "DIRECTORYROOTis_imageIMG_JPGIMG_PNGIMG_TIFIMG_WEBend_imageis_pageMARKUPMARKDOWNis_staticHTMLend_pageSTATICJAVASCRIPTSCSSCSSend_static"

var _file_type_index = [...]uint8{0, 9, 13, 21, 28, 35, 42, 49, 58, 65, 71, 79, 88, 92, 100, 106, 116, 120, 123, 133}

func (i file_type) String() string {
	if i >= file_type(len(_file_type_index)-1) {
		return "file_type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _file_type_name[_file_type_index[i]:_file_type_index[i+1]]
}
