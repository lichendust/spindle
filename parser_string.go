// Code generated by "stringer -type=ast_type,ast_modifier,file_type -output=parser_string.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NULL-0]
	_ = x[BLANK-1]
	_ = x[RAW-2]
	_ = x[NORMAL-3]
	_ = x[TOKEN-4]
	_ = x[IMPORT-5]
	_ = x[PARTIAL-6]
	_ = x[TEMPLATE-7]
	_ = x[SCOPE_UNSET-8]
	_ = x[DECL-9]
	_ = x[DECL_BLOCK-10]
	_ = x[DECL_TOKEN-11]
	_ = x[DECL_REJECT-12]
	_ = x[VAR-13]
	_ = x[VAR_ENUM-14]
	_ = x[VAR_ANON-15]
	_ = x[CONTROL_FOR-16]
	_ = x[CONTROL_IF-17]
	_ = x[OP_AND-18]
	_ = x[OP_OR-19]
	_ = x[OP_NOT-20]
	_ = x[RES_FINDER-21]
	_ = x[BLOCK-22]
	_ = x[is_formatter-23]
	_ = x[ITALIC_OPEN-24]
	_ = x[ITALIC_CLOSE-25]
	_ = x[BOLD_OPEN-26]
	_ = x[BOLD_CLOSE-27]
	_ = x[BOLD_ITALIC_OPEN-28]
	_ = x[BOLD_ITALIC_CLOSE-29]
	_ = x[MARK_OPEN-30]
	_ = x[MARK_CLOSE-31]
	_ = x[STRIKE_OPEN-32]
	_ = x[STRIKE_CLOSE-33]
	_ = x[WHITESPACE-34]
	_ = x[is_lexer-35]
	_ = x[NEWLINE-36]
	_ = x[WORD-37]
	_ = x[IDENT-38]
	_ = x[BRACE_OPEN-39]
	_ = x[BRACE_CLOSE-40]
	_ = x[BRACKET_OPEN-41]
	_ = x[BRACKET_CLOSE-42]
	_ = x[ANGLE_OPEN-43]
	_ = x[ANGLE_CLOSE-44]
	_ = x[ESCAPE-45]
	_ = x[NUMBER-46]
	_ = x[FORWARD_SLASH-47]
	_ = x[MULTIPLY-48]
	_ = x[AMPERSAND-49]
	_ = x[COLON-50]
	_ = x[TILDE-51]
	_ = x[EOF-52]
	_ = x[is_non_word-53]
	_ = x[NON_WORD-54]
	_ = x[ASTERISK-55]
	_ = x[EQUALS-56]
	_ = x[BANG-57]
	_ = x[STOP-58]
	_ = x[PLUS-59]
	_ = x[PERCENT-60]
	_ = x[PIPE-61]
}

const _ast_type_name = "NULLBLANKRAWNORMALTOKENIMPORTPARTIALTEMPLATESCOPE_UNSETDECLDECL_BLOCKDECL_TOKENDECL_REJECTVARVAR_ENUMVAR_ANONCONTROL_FORCONTROL_IFOP_ANDOP_OROP_NOTRES_FINDERBLOCKis_formatterITALIC_OPENITALIC_CLOSEBOLD_OPENBOLD_CLOSEBOLD_ITALIC_OPENBOLD_ITALIC_CLOSEMARK_OPENMARK_CLOSESTRIKE_OPENSTRIKE_CLOSEWHITESPACEis_lexerNEWLINEWORDIDENTBRACE_OPENBRACE_CLOSEBRACKET_OPENBRACKET_CLOSEANGLE_OPENANGLE_CLOSEESCAPENUMBERFORWARD_SLASHMULTIPLYAMPERSANDCOLONTILDEEOFis_non_wordNON_WORDASTERISKEQUALSBANGSTOPPLUSPERCENTPIPE"

var _ast_type_index = [...]uint16{0, 4, 9, 12, 18, 23, 29, 36, 44, 55, 59, 69, 79, 90, 93, 101, 109, 120, 130, 136, 141, 147, 157, 162, 174, 185, 197, 206, 216, 232, 249, 258, 268, 279, 291, 301, 309, 316, 320, 325, 335, 346, 358, 371, 381, 392, 398, 404, 417, 425, 434, 439, 444, 447, 458, 466, 474, 480, 484, 488, 492, 499, 503}

func (i ast_type) String() string {
	if i >= ast_type(len(_ast_type_index)-1) {
		return "ast_type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ast_type_name[_ast_type_index[i]:_ast_type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NONE-0]
	_ = x[SLUG-1]
	_ = x[UNIQUE_SLUG-2]
	_ = x[UPPER-3]
	_ = x[LOWER-4]
	_ = x[TITLE-5]
	_ = x[EXPAND-6]
	_ = x[EXPAND_ALL-7]
}

const _ast_modifier_name = "NONESLUGUNIQUE_SLUGUPPERLOWERTITLEEXPANDEXPAND_ALL"

var _ast_modifier_index = [...]uint8{0, 4, 8, 19, 24, 29, 34, 40, 50}

func (i ast_modifier) String() string {
	if i >= ast_modifier(len(_ast_modifier_index)-1) {
		return "ast_modifier(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ast_modifier_name[_ast_modifier_index[i]:_ast_modifier_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DIRECTORY-0]
	_ = x[ROOT-1]
	_ = x[is_image-2]
	_ = x[IMG_JPG-3]
	_ = x[IMG_PNG-4]
	_ = x[IMG_TIF-5]
	_ = x[IMG_WEB-6]
	_ = x[end_image-7]
	_ = x[is_page-8]
	_ = x[MARKUP-9]
	_ = x[MARKDOWN-10]
	_ = x[is_static-11]
	_ = x[HTML-12]
	_ = x[end_page-13]
	_ = x[STATIC-14]
	_ = x[JAVASCRIPT-15]
	_ = x[SCSS-16]
	_ = x[CSS-17]
	_ = x[end_static-18]
}

const _file_type_name = "DIRECTORYROOTis_imageIMG_JPGIMG_PNGIMG_TIFIMG_WEBend_imageis_pageMARKUPMARKDOWNis_staticHTMLend_pageSTATICJAVASCRIPTSCSSCSSend_static"

var _file_type_index = [...]uint8{0, 9, 13, 21, 28, 35, 42, 49, 58, 65, 71, 79, 88, 92, 100, 106, 116, 120, 123, 133}

func (i file_type) String() string {
	if i >= file_type(len(_file_type_index)-1) {
		return "file_type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _file_type_name[_file_type_index[i]:_file_type_index[i+1]]
}
